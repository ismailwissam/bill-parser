!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
CC	Makefile	/^CC       = gcc$/;"	m
CONTROL_TEMPLATE_DIR	insert.c	48;"	d	file:
DEFAULT_DB_PASSWORD	insert.c	44;"	d	file:
DEFAULT_DB_SERVER	insert.c	45;"	d	file:
DEFAULT_DB_USER	insert.c	43;"	d	file:
DEFAULT_IN_DIR	insert.c	41;"	d	file:
DEFAULT_RUN_DIR	insert.c	42;"	d	file:
ERR_LOG_FILE	insert.c	49;"	d	file:
LIBS	Makefile	/^LIBS     = -B dynamic -lnsl -ldl -lm$/;"	m
LOG_DIR	insert.c	46;"	d	file:
MAX_BUFFER	insert.c	36;"	d	file:
MAX_CHILD_PROCESS	insert.c	35;"	d	file:
MAX_DATE	insert.c	39;"	d	file:
MAX_FILENAME	insert.c	37;"	d	file:
MAX_FILE_ELEM_NUM	insert.c	51;"	d	file:
MAX_TABLENAME	insert.c	38;"	d	file:
MAX_TABLE_LIST_NUM	insert.c	52;"	d	file:
OBJECTS	Makefile	/^OBJECTS = $(SRCS:%.c=%.o)$/;"	m
PARSE_FAIL	insert.c	/^	PARSE_FAIL = -1,$/;"	e	enum:parse_code	file:
PARSE_MATCH	insert.c	/^	PARSE_MATCH	= 1,$/;"	e	enum:parse_code	file:
PARSE_UNMATCH	insert.c	/^	PARSE_UNMATCH = 2,$/;"	e	enum:parse_code	file:
PREFIX_RUN_LOG_FILE	insert.c	50;"	d	file:
SLEEP_TIME	insert.c	40;"	d	file:
SRCS	Makefile	/^SRCS = $(wildcard .\/*.c)$/;"	m
TARGET	Makefile	/^TARGET = ..\/..\/..\/release\/insert\/insert$/;"	m
WORK_DIR	insert.c	47;"	d	file:
__anon1::pid	insert.c	/^	int  pid;$/;"	m	struct:__anon1	file:	access:public
__anon1::sleep_time	insert.c	/^	int  sleep_time;$/;"	m	struct:__anon1	file:	access:public
clear_dir_file	insert.c	/^static int clear_dir_file(char * dir_name, char * prefix, char * suffix)$/;"	f	file:	signature:(char * dir_name, char * prefix, char * suffix)
clear_dir_file	insert.c	/^static int clear_dir_file(char * dir_name, char * prefix, char * suffix);$/;"	p	file:	signature:(char * dir_name, char * prefix, char * suffix)
commit_file	insert.c	/^static int commit_file(char * in_file_name, char * begin, char * end)$/;"	f	file:	signature:(char * in_file_name, char * begin, char * end)
commit_file	insert.c	/^static int commit_file(char * in_file_name, char * begin, char * end);$/;"	p	file:	signature:(char * in_file_name, char * begin, char * end)
curr_process_number	insert.c	/^int          curr_process_number    = 0;$/;"	v
daemon_start	insert.c	/^static void daemon_start(void)$/;"	f	file:	signature:(void)
daemon_start	insert.c	/^static void daemon_start(void);$/;"	p	file:	signature:(void)
db_password	insert.c	/^char *       db_password            = NULL;$/;"	v
db_server	insert.c	/^char *       db_server              = NULL;$/;"	v
db_user	insert.c	/^char *       db_user                = NULL;$/;"	v
debug	insert.c	/^int          debug                  = 0;$/;"	v
err_log	insert.c	/^static void err_log(char * format, ...)$/;"	f	file:	signature:(char * format, ...)
err_log	insert.c	/^static void err_log(char * format, ...);$/;"	p	file:	signature:(char * format, ...)
file_in_dir	insert.c	/^char *       file_in_dir            = NULL;$/;"	v
get_in_dir_name	insert.c	/^static parse_code_e get_in_dir_name(char * dir_name, char * prefix, char * suffix, char * ret_dir_list[])$/;"	f	file:	signature:(char * dir_name, char * prefix, char * suffix, char * ret_dir_list[])
get_in_dir_name	insert.c	/^static parse_code_e get_in_dir_name(char * dir_name, char * prefix, char * suffix, char * ret_dir_list[]);$/;"	p	file:	signature:(char * dir_name, char * prefix, char * suffix, char * ret_dir_list[])
get_orig_file_name	insert.c	/^static parse_code_e get_orig_file_name(char * dir_name, char * prefix, char * suffix, char * ret_file_name)$/;"	f	file:	signature:(char * dir_name, char * prefix, char * suffix, char * ret_file_name)
get_orig_file_name	insert.c	/^static parse_code_e get_orig_file_name(char * dir_name, char * prefix, char * suffix, char * ret_file_name);$/;"	p	file:	signature:(char * dir_name, char * prefix, char * suffix, char * ret_file_name)
get_time	insert.c	/^static int get_time(char * par)$/;"	f	file:	signature:(char * par)
get_time	insert.c	/^static int get_time(char * par);$/;"	p	file:	signature:(char * par)
insert	insert.c	/^static int insert(char * in_dir_name)$/;"	f	file:	signature:(char * in_dir_name)
insert	insert.c	/^static int insert(char * in_dir_name);$/;"	p	file:	signature:(char * in_dir_name)
main	insert.c	/^int main(int argc, char * argv[])$/;"	f	signature:(int argc, char * argv[])
parallel_child_process	insert.c	/^int          parallel_child_process = 1;$/;"	v
parse_code	insert.c	/^typedef enum parse_code {$/;"	g	file:
parse_code_e	insert.c	/^} parse_code_e;$/;"	t	typeref:enum:parse_code	file:
pid	insert.c	/^	int  pid;$/;"	m	struct:__anon1	file:	access:public
pre_suf_check	insert.c	/^static parse_code_e pre_suf_check(char * name, char * prefix, char * suffix)$/;"	f	file:	signature:(char * name, char * prefix, char * suffix)
pre_suf_check	insert.c	/^static parse_code_e pre_suf_check(char * name, char * prefix, char * suffix);$/;"	p	file:	signature:(char * name, char * prefix, char * suffix)
process_insert	insert.c	/^static void process_insert(int current_number, int parallel_number)$/;"	f	file:	signature:(int current_number, int parallel_number)
process_insert	insert.c	/^static void process_insert(int current_number, int parallel_number);$/;"	p	file:	signature:(int current_number, int parallel_number)
progname	insert.c	/^char *       progname               = NULL;$/;"	v
run_dir	insert.c	/^char *       run_dir                = NULL;$/;"	v
sleep_time	insert.c	/^	int  sleep_time;$/;"	m	struct:__anon1	file:	access:public
t_child_process_status	insert.c	/^} t_child_process_status;$/;"	t	typeref:struct:__anon1	file:
table_list	insert.c	/^const char * table_list[MAX_TABLE_LIST_NUM] = {$/;"	v
usage	insert.c	/^static void usage(int status)$/;"	f	file:	signature:(int status)
usage	insert.c	/^static void usage(int status);$/;"	p	file:	signature:(int status)
valid_in_file_name_and_get_table_name	insert.c	/^static int valid_in_file_name_and_get_table_name(char * in_file_name, char * ret_control_template, char * ret_table_name)$/;"	f	file:	signature:(char * in_file_name, char * ret_control_template, char * ret_table_name)
valid_in_file_name_and_get_table_name	insert.c	/^static int valid_in_file_name_and_get_table_name(char * in_file_name, char * ret_control_template, char * ret_table_name);$/;"	p	file:	signature:(char * in_file_name, char * ret_control_template, char * ret_table_name)
